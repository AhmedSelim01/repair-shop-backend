
{
  "info": {
    "name": "Repair Shop API - Complete Test Suite",
    "description": "Comprehensive API testing collection for the Repair Shop Management System. This collection includes all endpoints with detailed test cases for showcasing to potential employers.",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "exec": [
          "// Set base URL if not already set",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:3000');",
          "}"
        ],
        "type": "text/javascript"
      }
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register New User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response contains success field', function () {",
                  "    pm.expect(pm.response.json()).to.have.property('success', true);",
                  "});",
                  "",
                  "pm.test('Response contains token', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('token');",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "});",
                  "",
                  "pm.test('User object contains required fields', function () {",
                  "    const user = pm.response.json().user;",
                  "    pm.expect(user).to.have.property('_id');",
                  "    pm.expect(user).to.have.property('email');",
                  "    pm.expect(user).to.have.property('role');",
                  "    pm.environment.set('userId', user._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"phone\": \"+971501234567\",\n  \"password\": \"SecurePass123!\",\n  \"role\": \"truck_owner\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "User Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Login successful', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "    pm.environment.set('authToken', responseJson.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Register Admin User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "    pm.expect(responseJson.user.role).to.equal('admin');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Admin User\",\n  \"email\": \"admin@repairshop.com\",\n  \"phone\": \"+971509876543\",\n  \"password\": \"AdminPass123!\",\n  \"role\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Admin Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Admin login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "    pm.environment.set('adminToken', responseJson.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@repairshop.com\",\n  \"password\": \"AdminPass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• User Management",
      "item": [
        {
          "name": "Get All Users (Admin Only)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response contains users array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('users');",
                  "    pm.expect(responseJson.data.users).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            }
          }
        },
        {
          "name": "Get User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Profile contains user data', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data.user).to.have.property('_id');",
                  "    pm.expect(responseJson.data.user).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "üè¢ Company Management",
      "item": [
        {
          "name": "Create Company Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Company created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "    pm.environment.set('companyId', responseJson.data.company._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"companyName\": \"ABC Transport LLC\",\n  \"contactEmail\": \"contact@abctransport.com\",\n  \"phoneNumber\": \"+971504567890\",\n  \"address\": {\n    \"street\": \"123 Business Bay\",\n    \"city\": \"Dubai\",\n    \"state\": \"Dubai\",\n    \"zipCode\": \"00000\",\n    \"country\": \"UAE\"\n  },\n  \"companyLicenseDetails\": {\n    \"licenseNumber\": \"DUB-123456\",\n    \"licenseType\": \"Transport\",\n    \"issueDate\": \"2024-01-01\",\n    \"expiryDate\": \"2025-01-01\",\n    \"issuingAuthority\": \"Dubai Municipality\"\n  },\n  \"bankDetails\": {\n    \"bankName\": \"Emirates NBD\",\n    \"accountNumber\": \"1234567890\",\n    \"routingNumber\": \"EBILAEAD\",\n    \"accountType\": \"business\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/companies",
              "host": ["{{baseUrl}}"],
              "path": ["api", "companies"]
            }
          }
        }
      ]
    },
    {
      "name": "üîß Job Cards",
      "item": [
        {
          "name": "Create Job Card",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Job card created successfully', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.success).to.be.true;",
                  "    pm.environment.set('jobCardId', responseJson.data.jobCard._id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"vehicleInfo\": {\n    \"licensePlate\": \"DUB-12345\",\n    \"make\": \"Mercedes\",\n    \"model\": \"Actros\",\n    \"year\": 2020,\n    \"vin\": \"WDB9630351L123456\",\n    \"mileage\": 150000\n  },\n  \"issueDescription\": \"Engine overheating and brake system maintenance required\",\n  \"priority\": \"high\",\n  \"estimatedCost\": 2500,\n  \"estimatedCompletionDate\": \"2024-12-25\",\n  \"serviceType\": \"maintenance\",\n  \"assignedTechnician\": \"Tech001\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/jobcards",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobcards"]
            }
          }
        },
        {
          "name": "Get All Job Cards",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Job cards retrieved successfully', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data.jobCards).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/jobcards",
              "host": ["{{baseUrl}}"],
              "path": ["api", "jobcards"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    }
  ]
}
